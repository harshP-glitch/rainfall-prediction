# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14hULln8nG1Jr8ZA8-VxTiORVqSzXjktf
"""

    
import plotly.graph_objs as go
import pandas as pd

# Assuming you already have these predictions from earlier in the app
# y_test_inverse - actual values
# y_pred_inverse - predicted values

# Prepare dataframe
comparison_df = pd.DataFrame({
    'Date': pd.date_range(start='2022-01-01', periods=len(y_test_inverse), freq='M'),
    'Actual Rainfall': y_test_inverse.flatten(),
    'Predicted Rainfall': y_pred_inverse.flatten()
})

# Create interactive plotly line chart
fig = go.Figure()

# Actual Rainfall Line
fig.add_trace(go.Scatter(
    x=comparison_df['Date'], y=comparison_df['Actual Rainfall'],
    mode='lines+markers',
    name='Actual Rainfall',
    line=dict(color='blue'),
    hovertemplate='Date: %{x}<br>Actual: %{y:.2f} mm'
))

# Predicted Rainfall Line
fig.add_trace(go.Scatter(
    x=comparison_df['Date'], y=comparison_df['Predicted Rainfall'],
    mode='lines+markers',
    name='Predicted Rainfall',
    line=dict(color='orange'),
    hovertemplate='Date: %{x}<br>Predicted: %{y:.2f} mm<br><b>Deviation:</b> %{y:.2f} mm'
))

# Layout with zoom/drilldown
fig.update_layout(
    title='Interactive Rainfall Prediction vs Actual',
    xaxis_title='Date',
    yaxis_title='Rainfall (mm)',
    hovermode='x unified',
    xaxis=dict(
        rangeselector=dict(
            buttons=list([
                dict(count=6, label="6m", step="month", stepmode="backward"),
                dict(count=1, label="1y", step="year", stepmode="backward"),
                dict(step="all")
            ])
        ),
        rangeslider=dict(visible=True),
        type="date"
    )
)

# Show in Streamlit
st.plotly_chart(fig, use_container_width=True)
